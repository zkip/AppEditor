/* generated by Svelte v3.29.0 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	set_data,
	space,
	text,
	transition_in,
	transition_out,
} from "svelte/internal";

function create_title_slot(ctx) {
	let div0;
	let span0;
	let t1;
	let p0;
	let t2;
	let div1;
	let span1;
	let t4;
	let p1;
	let t5_value = /*i*/ ctx[0] * /*i*/ ctx[0] + "";
	let t5;

	return {
		c() {
			div0 = element("div");
			span0 = element("span");
			span0.textContent = "Title";
			t1 = space();
			p0 = element("p");
			t2 = text(/*i*/ ctx[0]);
			div1 = element("div");
			span1 = element("span");
			span1.textContent = "Title^2";
			t4 = space();
			p1 = element("p");
			t5 = text(t5_value);
			attr(div0, "slot", "title");
			attr(div1, "slot", "title");
		},
		m(target, anchor) {
			insert(target, div0, anchor);
			append(div0, span0);
			append(div0, t1);
			append(div0, p0);
			append(p0, t2);
			insert(target, div1, anchor);
			append(div1, span1);
			append(div1, t4);
			append(div1, p1);
			append(p1, t5);
		},
		p(ctx, dirty) {
			if (dirty & /*i*/ 1) set_data(t2, /*i*/ ctx[0]);
			if (
				dirty & /*i*/ 1 &&
				t5_value !== (t5_value = /*i*/ ctx[0] * /*i*/ ctx[0] + "")
			)
				set_data(t5, t5_value);
		},
		d(detaching) {
			if (detaching) detach(div0);
			if (detaching) detach(div1);
		},
	};
}

// (12:0) <Csf>
function create_default_slot(ctx) {
	let t;

	return {
		c() {
			t = space();
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		p: noop,
		d(detaching) {
			if (detaching) detach(t);
		},
	};
}

function create_fragment(ctx) {
	let csf;
	let current;

	csf = new Csf({
		props: {
			$$slots: {
				default: [create_default_slot],
				title: [create_title_slot],
			},
			$$scope: { ctx },
		},
	});

	return {
		c() {
			create_component(csf.$$.fragment);
		},
		m(target, anchor) {
			mount_component(csf, target, anchor);
			current = true;
		},
		p(ctx, [dirty]) {
			const csf_changes = {};

			if (dirty & /*$$scope, i*/ 3) {
				csf_changes.$$scope = { dirty, ctx };
			}

			csf.$set(csf_changes);
		},
		i(local) {
			if (current) return;
			transition_in(csf.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(csf.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(csf, detaching);
		},
	};
}

function instance($$self, $$props, $$invalidate) {
	let i = 0;

	setInterval(() => {
		$$invalidate(0, i++, i);
	}, 100);

	setInterval(() => {
		$$invalidate(0, (i += Math.random()));
	});

	return [i];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Component;
